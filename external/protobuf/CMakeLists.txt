if (BUILD_PROTOBUF)
  project(Protobuf C CXX)
  cmake_minimum_required(VERSION 3.12)
endif ()

set(PROTOBUF_URL "https://github.com/protocolbuffers/protobuf.git"
    CACHE STRING "The URL from which to clone PROTOBUF")

# ... then the tag.
set(PROTOBUF_TAG "v3.12.4"
  CACHE STRING "The git tag or hash to checkout for PROTOBUF")

set(PROTOBUF_CMAKE_BUILD_TYPE "${CMAKE_BUILD_TYPE}"
  CACHE STRING "The build type for PROTOBUF.")

set(CMAKE_GENERATOR "Unix Makefiles" CACHE INTERNAL "" FORCE)
#set(CMAKE_GENERATOR "Ninja" CACHE INTERNAL "" FORCE)

message(STATUS "INSTALL_PREFIX: ${CMAKE_INSTALL_PREFIX}")
include(ExternalProject)
ExternalProject_Add(PROTOBUF_PROJECT
  PREFIX "${CMAKE_CURRENT_BINARY_DIR}"
  TMP_DIR "${CMAKE_CURRENT_BINARY_DIR}/tmp"
  STAMP_DIR "${CMAKE_CURRENT_BINARY_DIR}/stamp"
  "GIT_REPOSITORY" ${PROTOBUF_URL}
  "GIT_TAG" ${PROTOBUF_TAG}
  SOURCE_DIR "${CMAKE_CURRENT_BINARY_DIR}/src"
  SOURCE_SUBDIR cmake
  BINARY_DIR "${CMAKE_CURRENT_BINARY_DIR}/build"
  INSTALL_DIR "${CMAKE_INSTALL_PREFIX}"
  STEP_TARGETS download
  USES_TERMINAL_BUILD 1
  LOG_DOWNLOAD 1
  LOG_UPDATE 1
  LOG_CONFIGURE 1
  LOG_BUILD 1
  LOG_INSTALL 1
  LOG_TEST 1
  CMAKE_ARGS
  -G${CMAKE_GENERATOR}
  -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}
  -DCMAKE_BUILD_TYPE=${PROTOBUF_CMAKE_BUILD_TYPE}
  -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}
  -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
  -DCMAKE_C_FLAGS=${CMAKE_C_FLAGS}
  -DCMAKE_CXX_FLAGS=${CMAKE_CXX_FLAGS}
  -DCMAKE_MACOSX_RPATH=ON
  -DCMAKE_POSITION_INDEPENDENT_CODE=ON
  -Dprotobuf_BUILD_TESTS=OFF
  -DBUILD_SHARED_LIBS=ON
  )
set(PROTOBUF_DIR ${CMAKE_INSTALL_PREFIX}
  CACHE INTERNAL "The install prefix of Protobuf.")
